# modules/exploit_suggester.py

# Base de datos simple de servicios y sugerencias de exploits
EXPLOIT_DB = {
    "mysql": "ğŸ‘‰ Intenta SQL Injection o credenciales dÃ©biles (root:root).",
    "ftp": "ğŸ‘‰ Prueba login anÃ³nimo o ataque de fuerza bruta. CVE-1999-0517.",
    "ssh": "ğŸ‘‰ Prueba fuerza bruta si versiones son viejas. CVE-2001-0554 (OpenSSH).",
    "http": "ğŸ‘‰ Verifica vulnerabilidades en CMS, LFI, RFI, XSS, SQLi.",
    "apache": "ğŸ‘‰ Exploit CVE-2021-41773 (Apache Path Traversal).",
    "samba": "ğŸ‘‰ CVE-2017-7494 RCE en Samba viejo.",
    "rdp": "ğŸ‘‰ CVE-2019-0708 BlueKeep (RDP Remote Code Execution).",
    "dns": "ğŸ‘‰ DNS Zone Transfer Attack (AXFR).",
    "telnet": "ğŸ‘‰ Fuerza bruta Telnet o exploits de overflow.",
    "smtp": "ğŸ‘‰ EnumeraciÃ³n de usuarios SMTP VRFY/EXPN."
}

def suggest_exploits(service_name):
    """Sugiere exploits o tÃ©cnicas basadas en el nombre del servicio detectado."""
    service = service_name.lower()
    suggestions = []

    for key in EXPLOIT_DB:
        if key in service:
            suggestions.append(EXPLOIT_DB[key])

    if suggestions:
        return "\n".join(suggestions)
    else:
        return "âš¡ No hay sugerencias automÃ¡ticas para este servicio. Requiere anÃ¡lisis manual."
